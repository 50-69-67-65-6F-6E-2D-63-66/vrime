name: build

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string

jobs:
  build:
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Ubuntu dependencies
        if: ${{ inputs.os == 'ubuntu-latest' }}
        # no need to use clang if gcc 12 becomes default
        run: |
          sudo apt install -y ninja-build \
            clang-format \
            libboost-dev \
            libboost-filesystem-dev \
            libboost-regex-dev \
            libboost-system-dev \
            libyaml-cpp-dev \
            libleveldb-dev \
            libmarisa-dev \
            libopencc-dev
          echo "CC=/usr/bin/clang" >> $GITHUB_ENV
          echo "CXX=/usr/bin/clang++" >> $GITHUB_ENV
      - name: Install macOS dependencies
        if: ${{ inputs.os == 'macos-latest' }}
        run: |
          brew install ninja clang-format
      - name: Use Node.js latest
        uses: actions/setup-node@v2
        with:
          node-version: 20.x
      - name: Install node dependencies
        run: |
          npm i -g pnpm
          pnpm i
      - name: Get submodules
        run: |
          pnpm run submodule
      - name: Get font
        run: |
          pnpm run font
      - name: Run lint
        run: |
          pnpm run lint
      - name: Install emsdk
        run: |
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          ./emsdk install latest
          ./emsdk activate latest
      - name: Build native librime
        run: pnpm run native
      - name: Install schemas
        run: pnpm run schema
      - name: Build wasm
        run: |
          . emsdk/emsdk_env.sh
          pnpm run lib
          pnpm run wasm
      - name: Check wasm reproducibility
        run: |
          pnpm run checksum
      - name: Build
        run: |
          pnpm run build
      - name: Tar files
        if: ${{ inputs.os == 'ubuntu-latest' }}
        run: tar --exclude=build/librime_native/bin/build -cvf artifact.tar build/librime_native/bin dist
      - name: Upload artifact
        if: ${{ inputs.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: artifact.tar
          path: artifact.tar
