diff --git a/CMakeLists.txt b/CMakeLists.txt
index c36bca2e..99b494f3 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -45,6 +45,9 @@ if (ENABLE_ASAN)
   set(CMAKE_SHARED_LINKER_FLAGS "${asan_lflags} ${CMAKE_SHARED_LINKER_FLAGS}")
 endif()
 
+# Reproducible build
+set(CMAKE_CXX_FLAGS "-ffile-prefix-map=${CMAKE_CURRENT_SOURCE_DIR}=. -DBOOST_DISABLE_CURRENT_LOCATION ${CMAKE_CXX_FLAGS}")
+
 set(Boost_USE_STATIC_LIBS ${BUILD_STATIC})
 set(Gflags_STATIC ${BUILD_STATIC})
 set(Glog_STATIC ${BUILD_STATIC})
diff --git a/deps/CMakeLists.txt b/deps/CMakeLists.txt
index a20440b3..515965f4 100644
--- a/deps/CMakeLists.txt
+++ b/deps/CMakeLists.txt
@@ -8,6 +8,9 @@ cmake_minimum_required(VERSION 3.10)
 # libmarisa don't have cmake based build, but it is relatively small,
 # so we define library target here
 
+# Reproducible build
+add_definitions(-ffile-prefix-map=${CMAKE_CURRENT_SOURCE_DIR}=.)
+
 if(UNIX)
   set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Weffc++ -Wextra -Wconversion")
 endif()
diff --git a/src/rime/config/build_info_plugin.cc b/src/rime/config/build_info_plugin.cc
index a60b6b56..eb521bb4 100644
--- a/src/rime/config/build_info_plugin.cc
+++ b/src/rime/config/build_info_plugin.cc
@@ -19,6 +19,7 @@ bool BuildInfoPlugin::ReviewLinkOutput(ConfigCompiler* compiler,
                                        an<ConfigResource> resource) {
   auto build_info = (*resource)["__build_info"];
   build_info["rime_version"] = RIME_VERSION;
+  return true;
   auto timestamps = build_info["timestamps"];
   compiler->EnumerateResources([&](an<ConfigResource> resource) {
     if (!resource->loaded) {
diff --git a/src/rime/deployer.cc b/src/rime/deployer.cc
index 1394679b..37a7951b 100644
--- a/src/rime/deployer.cc
+++ b/src/rime/deployer.cc
@@ -108,6 +108,7 @@ bool Deployer::StartWork(bool maintenance_mode) {
   }
   LOG(INFO) << "starting work thread for " << pending_tasks_.size()
             << " tasks.";
+  return Run();
   work_ = std::async(std::launch::async, [this] { Run(); });
   return work_.valid();
 }
diff --git a/src/rime/schema.cc b/src/rime/schema.cc
index 559cb7a8..9e49a039 100644
--- a/src/rime/schema.cc
+++ b/src/rime/schema.cc
@@ -4,9 +4,17 @@
 //
 // 2011-05-08 GONG Chen <chen.sst@gmail.com>
 //
+#include <string>
 #include <boost/algorithm/string.hpp>
 #include <rime/schema.h>
 
+#ifdef __EMSCRIPTEN__
+namespace my_rime {
+extern bool deployed;
+extern std::string get_schema_name(std::string);
+}  // namespace my_rime
+#endif
+
 namespace rime {
 
 Schema::Schema() : schema_id_(".default") {
@@ -26,7 +34,12 @@ void Schema::FetchUsefulConfigItems() {
     schema_name_ = schema_id_ + "?";
     return;
   }
-  if (!config_->GetString("schema/name", &schema_name_)) {
+#ifdef __EMSCRIPTEN__
+  if (!my_rime::deployed) {
+    schema_name_ = my_rime::get_schema_name(schema_id_);
+  } else
+#endif
+      if (!config_->GetString("schema/name", &schema_name_)) {
     schema_name_ = schema_id_;
   }
   config_->GetInt("menu/page_size", &page_size_);
diff --git a/tools/CMakeLists.txt b/tools/CMakeLists.txt
index 18e3407f..b79a0c16 100644
--- a/tools/CMakeLists.txt
+++ b/tools/CMakeLists.txt
@@ -44,18 +44,3 @@ install(TARGETS rime_dict_manager DESTINATION ${BIN_INSTALL_DIR})
 endif()
 
 install(TARGETS rime_patch DESTINATION ${BIN_INSTALL_DIR})
-
-file(COPY ${PROJECT_SOURCE_DIR}/data/minimal/default.yaml
-     DESTINATION ${EXECUTABLE_OUTPUT_PATH})
-file(COPY ${PROJECT_SOURCE_DIR}/data/minimal/symbols.yaml
-     DESTINATION ${EXECUTABLE_OUTPUT_PATH})
-file(COPY ${PROJECT_SOURCE_DIR}/data/minimal/essay.txt
-     DESTINATION ${EXECUTABLE_OUTPUT_PATH})
-file(COPY ${PROJECT_SOURCE_DIR}/data/minimal/luna_pinyin.dict.yaml
-     DESTINATION ${EXECUTABLE_OUTPUT_PATH})
-file(COPY ${PROJECT_SOURCE_DIR}/data/minimal/luna_pinyin.schema.yaml
-     DESTINATION ${EXECUTABLE_OUTPUT_PATH})
-file(COPY ${PROJECT_SOURCE_DIR}/data/minimal/cangjie5.dict.yaml
-     DESTINATION ${EXECUTABLE_OUTPUT_PATH})
-file(COPY ${PROJECT_SOURCE_DIR}/data/minimal/cangjie5.schema.yaml
-     DESTINATION ${EXECUTABLE_OUTPUT_PATH})
