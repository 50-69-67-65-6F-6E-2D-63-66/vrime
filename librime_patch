diff --git a/src/rime/config/build_info_plugin.cc b/src/rime/config/build_info_plugin.cc
index 4df1e65..eaf858c 100644
--- a/src/rime/config/build_info_plugin.cc
+++ b/src/rime/config/build_info_plugin.cc
@@ -19,6 +19,7 @@ bool BuildInfoPlugin::ReviewLinkOutput(
     ConfigCompiler* compiler, an<ConfigResource> resource) {
   auto build_info = (*resource)["__build_info"];
   build_info["rime_version"] = RIME_VERSION;
+  return true;
   auto timestamps = build_info["timestamps"];
   compiler->EnumerateResources([&](an<ConfigResource> resource) {
     if (!resource->loaded) {
diff --git a/src/rime/deployer.cc b/src/rime/deployer.cc
index fc43344..830333e 100644
--- a/src/rime/deployer.cc
+++ b/src/rime/deployer.cc
@@ -109,6 +109,7 @@ bool Deployer::StartWork(bool maintenance_mode) {
   }
   LOG(INFO) << "starting work thread for "
             << pending_tasks_.size() << " tasks.";
+  return Run();
   work_ = std::async(std::launch::async, [this] { Run(); });
   return work_.valid();
 }
diff --git a/src/rime/schema.cc b/src/rime/schema.cc
index 577bb31..22b9d40 100644
--- a/src/rime/schema.cc
+++ b/src/rime/schema.cc
@@ -4,9 +4,17 @@
 //
 // 2011-05-08 GONG Chen <chen.sst@gmail.com>
 //
+#include <string>
 #include <boost/algorithm/string.hpp>
 #include <rime/schema.h>
 
+#ifdef __EMSCRIPTEN__
+namespace my_rime {
+  extern bool deployed;
+  extern std::string get_schema_name(std::string);
+}
+#endif
+
 namespace rime {
 
 Schema::Schema()
@@ -28,6 +36,11 @@ void Schema::FetchUsefulConfigItems() {
     schema_name_ = schema_id_ + "?";
     return;
   }
+  #ifdef __EMSCRIPTEN__
+  if (!my_rime::deployed) {
+    schema_name_ = my_rime::get_schema_name(schema_id_);
+  } else
+  #endif
   if (!config_->GetString("schema/name", &schema_name_)) {
     schema_name_ = schema_id_;
   }
diff --git a/src/rime_api.cc b/src/rime_api.cc
index 10c99f5..506396e 100644
--- a/src/rime_api.cc
+++ b/src/rime_api.cc
@@ -971,11 +971,11 @@ static bool do_with_candidate_on_current_page(
 }
 
 
-Bool RimeSelectCandidate(RimeSessionId session_id, size_t index) {
+RIME_API Bool RimeSelectCandidate(RimeSessionId session_id, size_t index) {
   return do_with_candidate(session_id, index, &Context::Select);
 }
 
-Bool RimeSelectCandidateOnCurrentPage(RimeSessionId session_id, size_t index) {
+RIME_API Bool RimeSelectCandidateOnCurrentPage(RimeSessionId session_id, size_t index) {
   return do_with_candidate_on_current_page(session_id, index, &Context::Select);
 }
 
@@ -983,11 +983,11 @@ const char* RimeGetVersion() {
   return RIME_VERSION;
 }
 
-Bool RimeDeleteCandidate(RimeSessionId session_id, size_t index) {
+RIME_API Bool RimeDeleteCandidate(RimeSessionId session_id, size_t index) {
   return do_with_candidate(session_id, index, &Context::DeleteCandidate);
 }
 
-Bool RimeDeleteCandidateOnCurrentPage(RimeSessionId session_id, size_t index) {
+RIME_API Bool RimeDeleteCandidateOnCurrentPage(RimeSessionId session_id, size_t index) {
   return do_with_candidate_on_current_page(
       session_id, index, &Context::DeleteCandidate);
 }
diff --git a/src/rime_api.h b/src/rime_api.h
index 671a1c1..d0bc966 100644
--- a/src/rime_api.h
+++ b/src/rime_api.h
@@ -287,6 +287,10 @@ RIME_API void RimeCandidateListEnd(RimeCandidateListIterator* iterator);
 RIME_API Bool RimeCandidateListFromIndex(RimeSessionId session_id,
                                          RimeCandidateListIterator* iterator,
                                          int index);
+RIME_API Bool RimeSelectCandidate(RimeSessionId session_id, size_t index);
+RIME_API Bool RimeSelectCandidateOnCurrentPage(RimeSessionId session_id, size_t index);
+RIME_API Bool RimeDeleteCandidate(RimeSessionId session_id, size_t index);
+RIME_API Bool RimeDeleteCandidateOnCurrentPage(RimeSessionId session_id, size_t index);
 
 // Runtime options
 
diff --git a/tools/CMakeLists.txt b/tools/CMakeLists.txt
index 18e3407..b79a0c1 100644
--- a/tools/CMakeLists.txt
+++ b/tools/CMakeLists.txt
@@ -44,18 +44,3 @@ install(TARGETS rime_dict_manager DESTINATION ${BIN_INSTALL_DIR})
 endif()
 
 install(TARGETS rime_patch DESTINATION ${BIN_INSTALL_DIR})
-
-file(COPY ${PROJECT_SOURCE_DIR}/data/minimal/default.yaml
-     DESTINATION ${EXECUTABLE_OUTPUT_PATH})
-file(COPY ${PROJECT_SOURCE_DIR}/data/minimal/symbols.yaml
-     DESTINATION ${EXECUTABLE_OUTPUT_PATH})
-file(COPY ${PROJECT_SOURCE_DIR}/data/minimal/essay.txt
-     DESTINATION ${EXECUTABLE_OUTPUT_PATH})
-file(COPY ${PROJECT_SOURCE_DIR}/data/minimal/luna_pinyin.dict.yaml
-     DESTINATION ${EXECUTABLE_OUTPUT_PATH})
-file(COPY ${PROJECT_SOURCE_DIR}/data/minimal/luna_pinyin.schema.yaml
-     DESTINATION ${EXECUTABLE_OUTPUT_PATH})
-file(COPY ${PROJECT_SOURCE_DIR}/data/minimal/cangjie5.dict.yaml
-     DESTINATION ${EXECUTABLE_OUTPUT_PATH})
-file(COPY ${PROJECT_SOURCE_DIR}/data/minimal/cangjie5.schema.yaml
-     DESTINATION ${EXECUTABLE_OUTPUT_PATH})
